use('db_library_campus');
db.createCollection('usuario', {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["user", "email", "telefono", "primerNombre", "primerApellido", "password", "rol", "fechaNac"],
            properties: {
                user: { bsonType: "string", description: "'user' is required" },
                email: { bsonType: "string", description: "'email' is required", pattern: "^[a-zA-Z0-9.!#$%&'*+-/=?^_`{|}~]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" },
                telefono: { bsonType: "int", description: "'telefono' is required" },
                primerNombre: { bsonType: "string", description: "'primerNombre' is required", pattern: "^[a-zA-ZáéíóúüÁÉÍÓÚÜñÑ\s]*$" },
                primerApellido: { bsonType: "string", description: "'segundoNombre' is required", pattern: "^[a-zA-ZáéíóúüÁÉÍÓÚÜñÑ\s]*$" },
                password: { bsonType: "string", description: "'password' is required" },
                rol: { enum: ['cliente', 'empleado', 'gerente'], description: "'rol is required'" },
                fechaNac: { bsonType: "date", description: "'fechaNac' is incorrect" }
            }
        }
    }
});
db.usuario.createIndex({ user: 1, email: 1 }, { unique: true });

use('db_library_campus');
db.createCollection('libro', {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["codigo", "titulo", "autor", "editorial", "cantidadPaginas", "fechaEdicion", "descripcion", "enStock"],
            properties: {
                codigo: { bsonType: "int", description: "'codigo' is required" },
                titulo: { bsonType: "string", description: "'titulo' is required" },
                autor: { bsonType: "string", description: "'autor' is required" },
                editorial: { bsonType: "string", description: "'editorial' is required" },
                cantidadPaginas: { bsonType: "int", description: "'cantidadPaginas' is required" },
                fechaEdicion: { bsonType: "date", description: "'fechaEdicion' is incorrect" },
                descripcion: { bsonType: "string", description: "'descripcion' is incorrect" },
                enStock: { bsonType: "int", description: "'enStock' is required" }
            }
        }
    }
});
db.libro.createIndex({ codigo: 1, titulo: 1 }, { unique: true });

db.createCollection('prestamo', {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["dniUser", "codigoLibro", "fechaPrestamo", "fechaDevolucion", "estado"],
            properties: {
                dniUser: { bsonType: "int", description: "'codigo' is required" },
                codigoLibro: { bsonType: "int", description: "'codigoLibro' is required" },
                fechaPrestamo: { bsonType: "date", description: "'fechaPrestamo' is incorrect" },
                fechaDevolucion: { bsonType: "date", description: "'fechaDevolucion' is incorrect" },
                estado: { enum: ['prestado', 'devuelto'], description: "'estado' is incorrect" }
            }
        }
    }
});

db.createCollection('reserva', {
    validator: {
        $jsonSchema: {
            bsonType: "object",
            required: ["dniUser", "codigoLibro", "fechaPrestamo", "fechaDevolucion", "estado"],
            properties: {
                dniUser: { bsonType: "int", description: "'dniUser' is required" },
                codigoLibro: { bsonType: "int", description: "'codigoLibro' is required" },
                fechaPrestamo: { bsonType: "date", description: "'fechaPrestamo' is incorrect" },
                fechaDevolucion: { bsonType: "date", description: "'fechaDevolucion' is incorrect" },
                estado: { enum: ['pendiente', 'aceptado'], description: "'estado' is incorrect" }
            }
        }
    }
})